#!/usr/bin/env python3           
from concurrent.futures import ThreadPoolExecutor
import socket
import time
import sys

HOST = '127.0.0.1'
PORT = 54901

def send_line(fname):
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as client_socket:
        client_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        client_socket.connect((HOST, PORT))

        with open(fname, 'r') as file:
            for line in file:

                # pass empty lines
                if line.strip():
                    line_len = len(line)
                    data = b'B' + line_len.to_bytes(4, byteorder='big') + line.encode()
                    assert line_len <= 2100, "sequenza piu' lunga di 2100 char"
                    client_socket.sendall(data)

        client_socket.sendall(b'B' + b'\x00\x00\x00\x00')
        client_socket.shutdown(socket.SHUT_RDWR)
        client_socket.close()
    

if __name__ == '__main__':

    # wrong number of parameters, at least 2 are needed
    if (len(sys.argv) < 2):
        sys.exit(1)

    # get all files from sys.argv
    files = sys.argv[1:]
    
    # create a thread for each input file
    with ThreadPoolExecutor() as executor:
        for filename in files:
            # send file lines from client B to server using a thread for each file
            executor.submit(send_line, filename)    

    # required to give time to the server to write everything to pipe
    time.sleep(1)
